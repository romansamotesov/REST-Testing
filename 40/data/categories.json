{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Test defects","children":[{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   User is deleted deleted\nAssert.That(getUserResponse.Any(u => u.Name.Equals(\"TestName40\")), Is.True)\n  Expected: True\n  But was:  False\n\n","children":[{"name":"DeleteUserWithEmptyRequiredField_UserIsNotDeleted_Test","uid":"2ee1ad573f1328ac","parentUid":"28d1b356a94b6b2957f8c5fe26c86fc6","status":"broken","time":{"start":1714117879340,"stop":1714117879428,"duration":88},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"28d1b356a94b6b2957f8c5fe26c86fc6"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   list of zipCodes is not equal\nAssert.That(receivedZipcodes, Is.EqualTo(expectedZipCodes))\n  Expected is <System.Collections.Generic.List`1[System.String]> with 3 elements, actual is <System.Collections.Generic.List`1[System.String]> with 1 elements\n  Values differ at index [0]\n  Expected string length 5 but was 0. Strings differ at index 0.\n  Expected: < \"12345\", \"23456\", \"ABCDE\" >\n  But was:  < <string.Empty> >\n  First non-matching item at index [0]: \"12345\"\n\n","children":[{"name":"GetZipCodes_Test","uid":"f8e7744a168a3898","parentUid":"7eec0b0c5259c42bb924781add01cd9b","status":"broken","time":{"start":1714117879522,"stop":1714117879531,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["ZipCodes"]}],"uid":"7eec0b0c5259c42bb924781add01cd9b"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   lists of zipCodes are not equal\nAssert.That(receivedZipcodes, Is.EqualTo(expectedZipCodes))\n  Expected is <System.Collections.Generic.List`1[System.String]> with 4 elements, actual is <System.Collections.Generic.List`1[System.String]> with 1 elements\n  Values differ at index [0]\n  String lengths are both 5. Strings differ at index 3.\n  Expected: < \"12345\", \"23456\", \"ABCDE\", \"12366\" >\n  But was:  < \"12366\" >\n  First non-matching item at index [0]: \"12345\"\n\n","children":[{"name":"PostAlreadyUsedZipCodes_Test","uid":"bc43abdad0cfa5dd","parentUid":"621fc41869f326f19d17b1363a4e552e","status":"broken","time":{"start":1714117879532,"stop":1714117879541,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["ZipCodes"]}],"uid":"621fc41869f326f19d17b1363a4e552e"},{"name":"System.Net.Http.HttpRequestException : Request failed with status code FailedDependency","children":[{"name":"PostCreateUser_Test","uid":"a2d6562cd9f42c68","parentUid":"d4bfcc9fa5ec77214fb3d75d6f3a5f45","status":"broken","time":{"start":1714117879542,"stop":1714117879550,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"d4bfcc9fa5ec77214fb3d75d6f3a5f45"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   Status Code is not 400\nAssert.That(exception.StatusCode, Is.EqualTo(HttpStatusCode.BadRequest))\n  Expected: BadRequest\n  But was:  FailedDependency\n\n","children":[{"name":"PostDuplicateCreateUser_UserIsNotCreated_Test","uid":"92eb84c46f661320","parentUid":"1d2cbf855990c81176a23a82bfcaebba","status":"broken","time":{"start":1714117879551,"stop":1714117879560,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"1d2cbf855990c81176a23a82bfcaebba"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   lists of zipCodes are not equal\nAssert.That(receivedZipcodes, Is.EqualTo(expectedZipCodes))\n  Expected is <System.Collections.Generic.List`1[System.String]> with 5 elements, actual is <System.Collections.Generic.List`1[System.String]> with 2 elements\n  Values differ at index [0]\n  String lengths are both 5. Strings differ at index 3.\n  Expected: < \"12345\", \"ABCDE\", \"12333\", \"12344\", \"12355\" >\n  But was:  < \"12366\", \"12355\" >\n  First non-matching item at index [0]: \"12345\"\n\n","children":[{"name":"PostDuplicateZipCodes_Test","uid":"f2e38db72073302d","parentUid":"e79686f86a7e4b8f1a192a93a1606303","status":"broken","time":{"start":1714117879561,"stop":1714117879570,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["ZipCodes"]}],"uid":"e79686f86a7e4b8f1a192a93a1606303"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   lists of zipCodes are not equal\nAssert.That(receivedZipcodes, Is.EqualTo(expectedZipCodes))\n  Expected is <System.Collections.Generic.List`1[System.String]> with 5 elements, actual is <System.Collections.Generic.List`1[System.String]> with 4 elements\n  Values differ at index [0]\n  String lengths are both 5. Strings differ at index 3.\n  Expected: < \"12345\", \"23456\", \"ABCDE\", \"12333\", \"12344\" >\n  But was:  < \"12366\", \"12355\", \"12333\", \"12344\" >\n  First non-matching item at index [0]: \"12345\"\n\n","children":[{"name":"PostZipCodes_Test","uid":"415c2b62ff572792","parentUid":"b9e86d130c13bb43048257fcc6bc027b","status":"broken","time":{"start":1714117879611,"stop":1714117879637,"duration":26},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["ZipCodes"]}],"uid":"b9e86d130c13bb43048257fcc6bc027b"},{"name":"System.Net.Http.HttpRequestException : Request failed with status code BadRequest","children":[{"name":"UpdateUser_Test","uid":"db0a3f76e9463ffe","parentUid":"23aa1c29bba79303b51665b07ab104d3","status":"broken","time":{"start":1714117879638,"stop":1714117879646,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"23aa1c29bba79303b51665b07ab104d3"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   Status Code is not 424\nAssert.That(exception.Message, Is.EqualTo(expectedMessage))\n  Expected string length 79 but was 73. Strings differ at index 62.\n  Expected: \"... occurred. (Request failed with status code FailedDependency)\"\n  But was:  \"... occurred. (Request failed with status code BadRequest)\"\n  ----------------------------------------------------------^\n\n","children":[{"name":"UpdateUserWithIndalidZipCode_UserIsNotUpdated_Test","uid":"13bfc7781aab0fe4","parentUid":"770a83228344a2e58e96ee26d6f4a3c6","status":"broken","time":{"start":1714117879648,"stop":1714117879661,"duration":13},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"770a83228344a2e58e96ee26d6f4a3c6"},{"name":"System.Exception : Exception of type 'System.Exception' was thrown.\n\n  1)   Status Code is not 409\nAssert.That(exception.Message, Is.EqualTo(expectedMessage))\n  Expected string length 71 but was 73. Strings differ at index 62.\n  Expected: \"...errors occurred. (Request failed with status code Conflict)\"\n  But was:  \"...errors occurred. (Request failed with status code BadRequest)\"\n  ----------------------------------------------------------------^\n\n","children":[{"name":"UpdateUserWithNotFilledReqiuredFields_UserIsNotUpdated_Test","uid":"3a44fecf20a410fd","parentUid":"1c8f2e8a9104f6fbee8b5ffa7cf05aa1","status":"broken","time":{"start":1714117879662,"stop":1714117879668,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"1c8f2e8a9104f6fbee8b5ffa7cf05aa1"},{"name":"System.IO.FileNotFoundException : File not found","children":[{"name":"UploadUsers_Test","uid":"7d0c1cef3fdea8ed","parentUid":"fac4a84f3d1c61750aa5202b5c26131b","status":"broken","time":{"start":1714117879671,"stop":1714117879672,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]},{"name":"UploadUsersWithIncorrectZipCodes_UsersAreNotUploadedTest","uid":"831afd6a01bbc1ad","parentUid":"fac4a84f3d1c61750aa5202b5c26131b","status":"broken","time":{"start":1714117879673,"stop":1714117879674,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]},{"name":"UploadUsersWithMissedRequiredFields_UsersAreNotUploadedTest","uid":"ff007b163b1836d4","parentUid":"fac4a84f3d1c61750aa5202b5c26131b","status":"broken","time":{"start":1714117879674,"stop":1714117879675,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["Users"]}],"uid":"fac4a84f3d1c61750aa5202b5c26131b"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}